fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),legend.justification = c("right", "top"),legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA)
)
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+  scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")
bp1+scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ +scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+ + scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+  scale_colour_manual(labels=c("q","w"),values = rainbow(2), name="Outcomes of patients")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="New Legend Title"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend")) + scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+  + scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+   scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
bp1+theme(legend.title = element_text("qq"),legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA),aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black")
panel.border = element_rect(colour = "black", fill=NA)
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .88),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.9, .9),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .9),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),legend.box.background = element_rect(colour = "black"),axis.text = element_text(colour = 1, size = 12),
panel.border = element_rect(colour = "black", fill=NA)
)+ guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA),aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA),aspect.ratio = 1, axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.95, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend")) +   xlab("Strength of Move-out") +
ylab("Log(Cumulative cases)")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend")) +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))+ scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red")) +
theme_bw()  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))+ scale_color_manual(labels = c("T999", "T888"), values = c("blue", "red"))  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))+ scale_color_manual(labels = c("T999", "T888"), values = c(0, 1))  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))+ scale_color_manual(labels = c("T999", "T888"), values = c("0", "1"))  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+guides(fill=guide_legend(title="Legend"))+ scale_color_manual(labels = c("T999", "T888"), values = c(`0`, `1`))  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ scale_color_manual(labels = c("T999", "T888"), values = rainbow(2),name="qq")  +   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Serologic response",
labels=c("double negative", "positive for a and/or b"))
+   xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Serologic response",
labels=c("double negative", "positive for a and/or b"))
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Serologic response",
labels=c("double negative", "positive for a and/or b"))
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Serologic response",
labels=c("double negative", "positive for a and/or b")
) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
bp1
fmyqqdata$risk[is.na(fmyqqdata$risk)] <- 0
bp1 <- fmyqqdata%>% filter(time==as.Date("2020-04-13")) %>% ggplot(aes(x=risk, y=log(cum_confirm), fill=hygc)) + geom_boxplot()+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Legend", labels=c("Non National Hygienic City", "National Hygienic City")) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
bp1
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Legend", labels=c("Non National Hygienic City", "National Hygienic City")) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.38, .95),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Legend", labels=c("Non National Hygienic City", "National Hygienic City")) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.88, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Legend", labels=c("Non National Hygienic City", "National Hygienic City")) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+
scale_fill_discrete("Legend", labels=c("Non National Hygienic City", "National Hygienic City")) + xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Cumulative diagnosis cases in Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Cumulative diagnosis cases in Shiyan` = "red", `Cumulative diagnosis cases in Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan` = "red", `Tianmen` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan (National Hygienic City)")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen (Non National Hygienic City)")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan (National Hygienic City)` = "red", `Tianmen (Non National Hygienic City)` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ xlab("Strength of Move-out") +
ylab("Log of Cumulative cases")
ptian
Sys.setlocale('LC_ALL', "English")
ptian<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan (National Hygienic City)")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen (Non National Hygienic City)")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan (National Hygienic City)` = "red", `Tianmen (Non National Hygienic City)` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),legend.position = c(.98, .35),legend.justification = c("right", "top"),legend.margin = margin(6, 6, 6, 6),panel.border = element_rect(colour = "black", fill=NA), axis.text = element_text(colour = 1, size = 12),legend.background = element_blank(),legend.box.background = element_rect(colour = "black"))+ xlab("Date") +
ylab("Cumulative cases")
ptian
plot1<-tcurve %>%
filter(date2>as.Date("2020-01-01")) %>%
filter(date2<as.Date("2020-03-15")) %>%  ggplot() + geom_line(aes(x = date2, y = V1),size = 0.8, col="red") + geom_point(aes(x = date2, y = V1), col = "black") +xlab("Date") +ylab("Index of move-out strength of Wuhan") + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),panel.border = element_rect(colour = "black", fill=NA))
plot1<-tcurve %>%
filter(date2>as.Date("2020-01-01")) %>%
filter(date2<as.Date("2020-03-15")) %>%  ggplot() + geom_line(aes(x = date2, y = V1),size = 0.8, col="red") + geom_point(aes(x = date2, y = V1), col = "black") +xlab("Date") +ylab("Index of move-out strength of Wuhan") + theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),panel.border = element_rect(colour = "black", fill=NA))
plot1
plot1
plot1a<-tcurve2020 %>% select(V1) %>% xts(tcurve2020$date2) %>% dygraph() %>% dyOptions(fillGraph = TRUE) %>% dyRangeSelector()%>%saveWidget()
plot1a<-tcurve2020 %>% select(V1) %>% xts(tcurve2020$date2) %>% dygraph() %>% dyOptions(fillGraph = TRUE) %>% dyRangeSelector()%>%htmlwidgets::saveWidget()
plot1a<-tcurve2020 %>% select(V1) %>% xts(tcurve2020$date2) %>% dygraph() %>% dyOptions(fillGraph = TRUE) %>% dyRangeSelector()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
oldwd <- getwd()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Sys.setlocale('LC_ALL', "chinese")
setwd(dirname(oldwd))
source("R/analysis.R", encoding = "UTF-8")
require(dygraphs)
require(xts)
tcurve2020<-tcurve %>%filter(date2>as.Date("2020-01-01")) %>% filter(date2<as.Date("2020-03-15"))
diff(tcurve2020$date2)
require(dygraphs)
require(xts)
require(tidyverse)
tcurve2020<-tcurve %>%filter(date2>as.Date("2020-01-01")) %>% filter(date2<as.Date("2020-03-15"))
diff(tcurve2020$date2)
plot1a<-tcurve2020 %>% select(V1) %>% xts(tcurve2020$date2) %>% dygraph() %>% dyOptions(fillGraph = TRUE) %>% dyRangeSelector()
htmlwidgets::saveWidget(plot1a)
plot1a<-tcurve2020 %>% select(V1) %>% xts(tcurve2020$date2) %>% dygraph() %>% dyOptions(fillGraph = TRUE) %>% dyRangeSelector()
htmlwidgets::saveWidget(plot1a, file="plot1.html")
bp1
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Sys.setlocale('LC_ALL', "chinese")
setwd(dirname(oldwd))
oldwd <- getwd()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Sys.setlocale('LC_ALL', "chinese")
setwd(dirname(oldwd))
source("R/analysis.R", encoding = "UTF-8")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
Sys.setlocale('LC_ALL', "chinese")
setwd(dirname(oldwd))
source("R/analysis.R", encoding = "UTF-8")
ptian
plotly::ggplotly(ptian)
<iframe seamless src="plot1.html" width="600" height="600" frameborder="0"></iframe>
install.packages("webshot")
tem1<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan (National Hygienic City)")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen (Non National Hygienic City)")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan (National Hygienic City)` = "red", `Tianmen (Non National Hygienic City)` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+ xlab("Date in 2020") +
ylab("Cumulative cases")
tem1
tem1<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan (National Hygienic City)")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen (Non National Hygienic City)")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan (National Hygienic City)` = "red", `Tianmen (Non National Hygienic City)` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+ xlab("Date in 2020") +
ylab("Cumulative cases")
plotly::ggplotly(tem1)
tem<-ggplot() + geom_point(data = shiyan, aes(x = time, y = cum_confirm, color = "Shiyan (National Hygienic City)")) + geom_point(data = tianmen, aes(x = time, y = cum_confirm, color = "Tianmen (Non National Hygienic City)")) + labs(y = "Cases",x="Date", color = "Legend") + scale_colour_manual( values=c(`Shiyan (National Hygienic City)` = "red", `Tianmen (Non National Hygienic City)` = "blue"))+
geom_line(data = shiyan,aes(x = time, y = cum_confirm),size = 0.8, col="red")+ geom_line(data = tianmen,aes(x = time, y = cum_confirm),size = 0.8, col="blue")+
theme( panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))+ xlab("Date in 2020") +
ylab("Cumulative cases")
plotly::ggplotly(tem)
